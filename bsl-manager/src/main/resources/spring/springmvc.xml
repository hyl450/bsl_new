<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/task
    	http://www.springframework.org/schema/task/spring-task-3.1.xsd">
	
	<!-- 注解驱动 -->
	<context:component-scan base-package="com.bsl.controller" />
	<!-- <context:component-scan base-package="com.bsl.interceptor" /> -->
	<mvc:annotation-driven />
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<bean id="bslScheduler" class="com.bsl.interceptor.schedule.impl.BslSchedulerImpl">
    </bean>
	<!-- 资源映射 静态资源就不会被拦截了-->
 	<mvc:resources location="/WEB-INF/css/" mapping="/css/**"/>
	<mvc:resources location="/WEB-INF/js/" mapping="/js/**"/>
	<mvc:resources location="/WEB-INF/images/" mapping="/images/**"/>
	<mvc:resources location="/WEB-INF/generic/" mapping="/generic/**"/>
	
	<!-- 用于持有ApplicationContext,可以使用 SpringContextUtil.getBean('xxxx')的静态方法得到spring bean对象 -->
	<bean class="com.bsl.common.SpringContextUtils " lazy-init="false" />
	<!-- 拦截器配置 拦截除了exceptUrls内的所有请求-->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 拦截订单类请求 -->
			<mvc:mapping path="/**"/>
			<bean class="com.bsl.interceptor.LoginInterceptor">
				<property name="exceptUrls">
                    <list>
                    	<value>/login</value>
                        <value>/user/login</value>
                        <value>/user/register</value>
                        <value>/css/**</value>
                        <value>/js/**</value>
                        <value>/images/**</value>
                        <value>/generic/**</value>
                    </list>
                </property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 定时任务 -->
	<task:annotation-driven /> 
    <context:annotation-config/>
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

</beans>